name: 构建和发布 MacOS校宝打印组件

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: 构建 ${{ matrix.arch }} 版本
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-12        # Intel Mac (更低版本以确保兼容性)
            arch: amd64
            arch_name: Intel
            runner_arch: x86_64
            min_os_version: "10.13"  # 支持 High Sierra 及以上
          - os: macos-14        # ARM Mac (M1)
            arch: arm64
            arch_name: ARM
            runner_arch: arm64
            min_os_version: "11.0"   # ARM Mac 最低 Big Sur

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置 Go 环境
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: 验证架构
      run: |
        echo "当前运行环境架构: $(uname -m)"
        echo "目标构建架构: ${{ matrix.arch }}"
        echo "Go 版本: $(go version)"

    - name: 安装和获取 socat
      run: |
        echo "安装 socat..."
        brew install socat
        
        echo "获取 socat 二进制文件位置..."
        SOCAT_PATH=$(which socat)
        echo "socat 位置: $SOCAT_PATH"
        
        # 创建构建目录
        mkdir -p build-assets
        
        # 复制 socat 到构建资源目录
        cp "$SOCAT_PATH" build-assets/socat
        
        # 验证 socat
        ./build-assets/socat -V | head -5
        
        echo "✓ socat 准备完成"

    - name: 设置构建环境
      run: |
        echo "设置中文语言环境..."
        export LC_ALL=zh_CN.UTF-8
        export LANG=zh_CN.UTF-8
        echo "LC_ALL=zh_CN.UTF-8" >> $GITHUB_ENV
        echo "LANG=zh_CN.UTF-8" >> $GITHUB_ENV
        
        echo "设置macOS兼容性..."
        if [[ "${{ matrix.arch }}" == "amd64" ]]; then
          # 设置Intel版本的最低系统要求为 macOS 10.13
          echo "MACOSX_DEPLOYMENT_TARGET=10.13" >> $GITHUB_ENV
          echo "CGO_CFLAGS=-mmacosx-version-min=10.13" >> $GITHUB_ENV
          echo "CGO_LDFLAGS=-mmacosx-version-min=10.13" >> $GITHUB_ENV
          echo "✓ Intel版本目标系统: macOS 10.13+"
        else
          # ARM版本最低为 macOS 11.0 (Big Sur)
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV
          echo "CGO_CFLAGS=-mmacosx-version-min=11.0" >> $GITHUB_ENV  
          echo "CGO_LDFLAGS=-mmacosx-version-min=11.0" >> $GITHUB_ENV
          echo "✓ ARM版本目标系统: macOS 11.0+"
        fi

    - name: 构建应用程序
      run: |
        echo "开始构建 MacOS校宝打印组件 - ${{ matrix.arch_name }} 版本..."
        
        # 设置应用程序名称
        APP_NAME="MacOS校宝打印组件"
        BUILD_DIR="build-${{ matrix.arch }}"
        
        # 创建构建目录
        mkdir -p "$BUILD_DIR"
        
        # 构建应用程序 (使用兼容性设置)
        echo "构建参数："
        echo "  MACOSX_DEPLOYMENT_TARGET: $MACOSX_DEPLOYMENT_TARGET"
        echo "  CGO_CFLAGS: $CGO_CFLAGS"
        echo "  CGO_LDFLAGS: $CGO_LDFLAGS"
        
        go build -ldflags="-s -w" -o "$BUILD_DIR/$APP_NAME" .
        
        if [ $? -eq 0 ]; then
          echo "✓ ${{ matrix.arch_name }} 版本构建成功"
        else
          echo "✗ ${{ matrix.arch_name }} 版本构建失败"
          exit 1
        fi
        
        # 复制必需文件
        echo "复制必需文件..."
        
        # 复制配置文件
        if [ -f "config.yaml" ]; then
          cp "config.yaml" "$BUILD_DIR/"
          echo "✓ 复制 config.yaml"
        fi
        
        # 复制驱动程序
        if [ -f "hprt-pos-printer-driver-v1.2.16.pkg" ]; then
          cp "hprt-pos-printer-driver-v1.2.16.pkg" "$BUILD_DIR/"
          echo "✓ 复制 HPRT驱动程序"
        fi
        
        # 复制 socat
        cp "build-assets/socat" "$BUILD_DIR/"
        chmod +x "$BUILD_DIR/socat"
        echo "✓ 复制 socat"
        
        # 创建 README
        cat > "$BUILD_DIR/README.txt" << EOF
        MacOS校宝打印组件 - ${{ matrix.arch_name }} 版本 (${{ matrix.arch }})
        ================================================
        
                 构建信息：
         - 构建时间: $(date '+%Y-%m-%d %H:%M:%S UTC')
         - 构建环境: GitHub Actions ${{ matrix.os }}
         - 目标架构: ${{ matrix.arch }}
         - 最低系统: macOS ${{ matrix.min_os_version }}
         - Go 版本: $(go version | cut -d' ' -f3)
        
        安装说明：
        1. 运行 "$APP_NAME" 启动配置工具
        2. 按照步骤完成 HPRT 打印机配置
        3. 如需手动安装驱动，双击 "hprt-pos-printer-driver-v1.2.16.pkg"
        
                 系统要求：
         ${{ matrix.arch_name == 'ARM' && '- macOS 11.0 或更高版本' || '- macOS 10.13 或更高版本 (支持黑苹果)' }}
         ${{ matrix.arch_name == 'ARM' && '- Apple Silicon 处理器Mac (M1/M2/M3)' || '- Intel 处理器Mac (包括黑苹果)' }}
        
        包含组件：
        - $APP_NAME: 主配置工具
        - config.yaml: 应用程序配置文件
        - hprt-pos-printer-driver-v1.2.16.pkg: HPRT 打印机驱动程序
        - socat: 网络代理工具 (预装，无需 brew)
        
        联系方式：
        如有问题，请访问：https://github.com/Norman-w/macos-clodop-schoolpal
        EOF
        
        echo "✓ 创建 README.txt"

    - name: 创建压缩包
      run: |
        BUILD_DIR="build-${{ matrix.arch }}"
        TIMESTAMP=$(date '+%Y%m%d-%H%M')
        ZIP_NAME="MacOS校宝打印组件-${{ matrix.arch_name }}-${TIMESTAMP}.zip"
        
        echo "创建压缩包: $ZIP_NAME"
        cd "$BUILD_DIR"
        zip -r "../$ZIP_NAME" . -x "*.DS_Store"
        cd ..
        
        # 显示文件信息
        echo "压缩包信息:"
        ls -lh "$ZIP_NAME"
        
        # 设置环境变量供后续步骤使用
        echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
        echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: macos-clodop-schoolpal-${{ matrix.arch_name }}
        path: |
          ${{ env.ZIP_NAME }}
          ${{ env.BUILD_DIR }}/

    - name: 发布到 Release (仅标签触发)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ZIP_NAME }}
        name: MacOS校宝打印组件 ${{ github.ref_name }}
        body: |
          ## MacOS校宝打印组件 ${{ github.ref_name }}
          
          **构建时间**: $(date '+%Y-%m-%d %H:%M:%S UTC')
          
          **版本说明**:
          - ✅ 支持 Intel 和 ARM (Apple Silicon) 架构
          - ✅ 包含 HPRT 打印机驱动程序
          - ✅ 预装 socat 网络代理工具（无需 brew）
          - ✅ 包含中文字体支持
          - ✅ 智能步骤检测，跳过已完成的配置
          
                     **下载说明**:
           - Intel Mac 用户请下载 `MacOS校宝打印组件-Intel-*.zip` (支持 macOS 10.13+，包括黑苹果)
           - Apple Silicon Mac 用户请下载 `MacOS校宝打印组件-ARM-*.zip` (需要 macOS 11.0+)
          
          **安装步骤**:
          1. 下载对应架构的压缩包
          2. 解压到任意目录
          3. 运行 "MacOS校宝打印组件" 启动配置工具
          4. 按照界面提示完成配置
          
          如有问题，请在 [Issues](https://github.com/Norman-w/macos-clodop-schoolpal/issues) 中反馈。
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  summary:
    name: 构建摘要
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 显示构建结果
      run: |
        echo "## 🎉 MacOS校宝打印组件构建完成"
        echo ""
        echo "### 构建状态"
        echo "- Intel 版本: ${{ needs.build.outputs.intel-status || '完成' }}"
        echo "- ARM 版本: ${{ needs.build.outputs.arm-status || '完成' }}"
        echo ""
        echo "### 产物下载"
        echo "构建产物已上传到 GitHub Actions Artifacts"
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          echo "Release 已自动创建: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
        fi 